#pragma strict

function Start () {
//	LoadAssetBandles.getInstance().load("test/sample1", 0);
//Application.LoadLevel("f99_loading");
	var assetBundleInfoDic = new Dictionary.<String, int>();
//	assetBundleInfoDic.Add("f01/nanosaki/s99/cmn/standard", 0);
//	assetBundleInfoDic.Add("f01/nanosaki/s01/tr/asa", 0);
//	assetBundleInfoDic.Add("prefab/tsuyoshi_auto", 0);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading("f01_tsuyoshiRoom", assetBundleInfoDic);
//	assetBundleInfoDic.Add("f01/nanosaki/s99/cmn/standard", 0);
//	assetBundleInfoDic.Add("f01/nanosaki/s02/na/tsugakuro", 0);
//	assetBundleInfoDic.Add("prefab/tsuyoshi_auto", 0);
//	assetBundleInfoDic.Add("prefab/students", 0);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading(1.0f, 3.0f, "f01_nanosakiAppearance", assetBundleInfoDic);
//	assetBundleInfoDic.Add("f01/nanosaki/s99/cmn/standard", 0);
//	assetBundleInfoDic.Add("f01/nanosaki/s04/mb/shaseitaikai", 0);
//	assetBundleInfoDic.Add("f01/nanosaki/s04/mb/tasogare", 0);
//	assetBundleInfoDic.Add("prefab/tsuyoshi_auto", 0);
//	assetBundleInfoDic.Add("prefab/students", 0);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading(1.0f, 3.0f, "f01_mountainBehind1_1", assetBundleInfoDic);
//	assetBundleInfoDic.Add("f96/tsuyoshiyume", 0);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading("f96_tsuyoshiyume-A", assetBundleInfoDic);
//	assetBundleInfoDic.Add("f96/tsuyoshiyume", 0);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading(1.0f, 3.0f, "f96_tsuyoshiyume-B", assetBundleInfoDic);
	assetBundleInfoDic.Add("prefab/tsuyoshi_manual", 0);
	assetBundleInfoDic.Add("prefab/tsuyoshi_auto", 0);
	assetBundleInfoDic.Add("prefab/ronno_auto", 0);
	assetBundleInfoDic.Add("prefab/ningu_auto", 0);
	assetBundleInfoDic.Add("prefab/emo_auto", 0);
	assetBundleInfoDic.Add("prefab/msgdialog", 0);
	assetBundleInfoDic.Add("prefab/fieldmenu", 0);
	assetBundleInfoDic.Add("prefab/battlemenu", 0);
	assetBundleInfoDic.Add("f99/cmn/s05/battle/normal", 0);
	assetBundleInfoDic.Add("f99/cmn/s05/battle/cmn", 0);
	assetBundleInfoDic.Add("prefab/enemy/001", 0);
	assetBundleInfoDic.Add("prefab/particle/cmn", 0);
	assetBundleInfoDic.Add("prefab/particle/emo", 0);
	SceneLoadManager.getInstance().loadLevelInLoading(3.0f, "f02_caveOfHagaurakasu", assetBundleInfoDic);
//	assetBundleInfoDic.Add("prefab/tsuyoshi_auto", 0);
//	assetBundleInfoDic.Add("prefab/emo_auto", 0);
//	assetBundleInfoDic.Add("prefab/ningu_auto", 0);
//	assetBundleInfoDic.Add("prefab/kasi_auto", 0);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	assetBundleInfoDic.Add("prefab/fieldmenu", 0);
//	assetBundleInfoDic.Add("prefab/namedialog", 0);
//	assetBundleInfoDic.Add("prefab/battlemenu", 0);
//	assetBundleInfoDic.Add("f99/cmn/s05/battle/normal", 0);
//	assetBundleInfoDic.Add("f99/cmn/s05/battle/middle", 0);
//	assetBundleInfoDic.Add("f99/cmn/s05/battle/cmn", 0);
//	assetBundleInfoDic.Add("f99/cmn/s06/field/dungeon", 0);
//	assetBundleInfoDic.Add("prefab/enemy/001", 0);
//	assetBundleInfoDic.Add("prefab/enemy/kasi", 0);
//	assetBundleInfoDic.Add("prefab/particle/cmn", 0);
//	assetBundleInfoDic.Add("prefab/particle/emo", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading(3.0f, "f02_kasuLake", assetBundleInfoDic);
//	assetBundleInfoDic.Add("prefab/msgdialog", 0);
//	assetBundleInfoDic.Add("prefab/fieldmenu", 0);
//	assetBundleInfoDic.Add("prefab/battlemenu", 0);
//	assetBundleInfoDic.Add("f99/cmn/s05/battle/normal", 0);
//	assetBundleInfoDic.Add("f99/cmn/s05/battle/cmn", 0);
//	assetBundleInfoDic.Add("prefab/enemy/001", 0);
//	assetBundleInfoDic.Add("prefab/particle/cmn", 0);
//	assetBundleInfoDic.Add("prefab/particle/emo", 0);
//	SceneLoadManager.getInstance().loadLevelInLoading("f02_kasuLake", assetBundleInfoDic);
//	SceneLoadManager.getInstance().loadLevelInLoading("sample", assetBundleInfoDic);
//	SceneLoadManager.getInstance().fade(3.0f);
//	this.GetComponent.<MeshRenderer>().sortingLayerName = "test1";
//	this.GetComponent.<MeshRenderer>().sortingOrder = 2;
//	this.GetComponent.<Renderer>().material.color = Color.white;
}

function Update () {
//	Application.LoadLevel("test");
}